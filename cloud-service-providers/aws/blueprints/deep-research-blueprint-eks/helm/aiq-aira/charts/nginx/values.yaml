# Default values for nginx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

global:
  ngcImagePullSecretName: ""

imagePullSecret:
   name: "pull-secret"

nginxImage:
  ngcImageRegistry: "nvcr.io"    # set it to empty string "" if want to use dockerhub nginx image
  ngcImageRegistryPath: "goirlvsxnepa/blueprints"  # set it to empty string "" if want to use dockerhub nginx image
  name: "nginx"
  tag: "1.27.0"
  pullPolicy: Always

nginx_config:    # under conf: |- update values for proxy_pass at 3 places according to target host. 
  name: "nginx-config"
  conf: |-
    worker_processes auto;

    events {
        worker_connections 1024;
    }

    http {
        proxy_ssl_server_name on;

        proxy_cache_path /server_cache_llm levels=1:2 keys_zone=llm_cache:10m max_size=20g inactive=14d use_temp_path=off;

        proxy_cache_path /server_cache_intel levels=1:2 keys_zone=intel_cache:10m max_size=20g inactive=14d use_temp_path=off;

        error_log /dev/stdout info;

        log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                                '"$request" $status $body_bytes_sent '
                                '"$http_referer" "$http_user_agent"'
                                'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

        log_format cache_log '[$time_local] ($upstream_cache_status) "$request" $status - $body_bytes_sent bytes {$remote_addr} "$http_user_agent" $request_time - $connection_requests. Auth: $http_authorization';

        log_format no_cache_log '[$time_local] (BYPASSED) "$request" $status - $body_bytes_sent bytes {$remote_addr} "$http_user_agent" $request_time - $connection_requests. Auth: $http_authorization';

        log_format mirror_log '[$time_local] (MIRROR) "$request" $status - $body_bytes_sent bytes {$remote_addr} "$http_user_agent" $request_time - $connection_requests. Auth: $http_authorization';

        log_format nvai_cache_log '[$time_local] ($upstream_cache_status) "$request" $status - $body_bytes_sent bytes {$remote_addr} "$http_user_agent" $request_time - $connection_requests. Auth: $http_authorization. $upstream_addr';

        map $http_cache_control $cache_bypass {
            no-cache   1;
        }

        # Log to stdout and a file for searchability
        access_log /dev/stdout cache_log;
        access_log /var/log/nginx/access.log cache_log;

        error_log /dev/stdout info;
        error_log /var/log/nginx/error.log info;

        server {
            listen 8000;
            server_name localhost;

            location /v1/files {
                proxy_pass <replace-with-vdb-base-url>/v1/documents;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_pass_request_headers on;
            }

            location /v1/collections {
                limit_except POST DELETE {
                    deny all;
                }
                proxy_pass <replace-with-vdb-base-url>/v1/collections;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_pass_request_headers on;
            }

            location / {
                proxy_pass <replace-with-aira-base-url>;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 300s;
                proxy_pass_request_headers on;
            }

            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /usr/share/nginx/html;
            }
        }
    }

service:
  type: ClusterIP
  port: 8000

# same configmap name should be should while mounting it as volumes.
# configmap_name: nginx-config

# Additional volumes on the output Deployment definition.
volumes: 
      - name: nginx-config
        configMap:
          name: nginx-config
          defaultMode: 0755
          items:
            - key: nginx.conf
              path: nginx.conf

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
      - name: nginx-config
        mountPath: /etc/nginx/nginx.conf
        subPath: nginx.conf
        readOnly: true

